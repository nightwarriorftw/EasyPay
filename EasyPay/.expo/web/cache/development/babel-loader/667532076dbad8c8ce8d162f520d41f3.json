{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/nightwarrior-xxx/Documents/Minor/Minor2/EasyPay/EasyPay/screens/authentication/UploadScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Constants from \"../../constants\";\nimport * as Utils from \"../../utils\";\n\nvar UploadScreen = function (_Component) {\n  _inherits(UploadScreen, _Component);\n\n  var _super = _createSuper(UploadScreen);\n\n  function UploadScreen() {\n    var _this;\n\n    _classCallCheck(this, UploadScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      image: null,\n      uploading: false\n    };\n\n    _this._maybeRenderUploadingOverlay = function () {\n      if (_this.state.uploading) {\n        return React.createElement(View, {\n          style: [StyleSheet.absoluteFill, styles.maybeRenderUploading],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          color: \"#fff\",\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n\n    _this._maybeRenderImage = function () {\n      var image = _this.state.image;\n\n      if (!image) {\n        return;\n      }\n\n      return React.createElement(View, {\n        style: styles.maybeRenderContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.maybeRenderImageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: image\n        },\n        style: styles.maybeRenderImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        onPress: _this._copyToClipboard,\n        onLongPress: _this._share,\n        style: styles.maybeRenderImageText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, image));\n    };\n\n    _this._takePhoto = function _callee() {\n      var _await$Permissions$as, cameraPerm, pickerResult;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              cameraPerm = _await$Permissions$as.status;\n\n              if (!(cameraPerm === \"granted\")) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [4, 3],\n                base64: true,\n                quality: 1\n              }));\n\n            case 7:\n              pickerResult = _context.sent;\n\n              _this._handleImagePicked(pickerResult);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._handleImagePicked = function _callee2(pickerResult) {\n      var uploadResponse, uploadResult;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              _this.setState({\n                uploading: true\n              });\n\n              if (pickerResult.cancelled) {\n                _context2.next = 11;\n                break;\n              }\n\n              console.log(pickerResult.base64);\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(uploadImageAsync(pickerResult.base64));\n\n            case 6:\n              uploadResponse = _context2.sent;\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(uploadResponse.json());\n\n            case 9:\n              uploadResult = _context2.sent;\n\n              _this.setState({\n                image: uploadResult.location\n              });\n\n            case 11:\n              console.log(uploadResult);\n\n              _this.props.navigation.navigate(\"App\");\n\n              _context2.next = 21;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log({\n                uploadResponse: uploadResponse\n              });\n              console.log({\n                uploadResult: uploadResult\n              });\n              console.log({\n                e: _context2.t0\n              });\n              alert(\"Upload failed, sorry :(\");\n\n            case 21:\n              _context2.prev = 21;\n\n              _this.setState({\n                uploading: false\n              });\n\n              return _context2.finish(21);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 15, 21, 24]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadScreen, [{\n    key: \"render\",\n    value: function render() {\n      var image = this.state.image;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.exampleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, \"Upload Image\"), React.createElement(TouchableOpacity, {\n        onPress: this._takePhoto,\n        style: styles.buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"Take Photo\")), this._maybeRenderImage(), this._maybeRenderUploadingOverlay());\n    }\n  }]);\n\n  return UploadScreen;\n}(Component);\n\nexport { UploadScreen as default };\n\nfunction uploadImageAsync(uri) {\n  var apiUrl, formData, options;\n  return _regeneratorRuntime.async(function uploadImageAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          apiUrl = Constants.UPLOAD_IMAGE;\n          formData = new FormData();\n          formData.append(\"image\", uri);\n          options = {\n            method: \"POST\",\n            body: formData,\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          };\n          return _context3.abrupt(\"return\", fetch(apiUrl, options));\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  exampleText: {\n    fontSize: 20,\n    marginBottom: 20,\n    marginHorizontal: 15,\n    textAlign: \"center\"\n  },\n  maybeRenderUploading: {\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n    justifyContent: \"center\"\n  },\n  maybeRenderContainer: {\n    borderRadius: 3,\n    elevation: 2,\n    marginTop: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOpacity: 0.2,\n    shadowOffset: {\n      height: 4,\n      width: 4\n    },\n    shadowRadius: 5,\n    width: 250\n  },\n  maybeRenderImageContainer: {\n    borderTopLeftRadius: 3,\n    borderTopRightRadius: 3,\n    overflow: \"hidden\"\n  },\n  maybeRenderImage: {\n    height: 250,\n    width: 250\n  },\n  buttonStyle: {\n    backgroundColor: \"#9C27B0\",\n    shadowOffset: {\n      width: 10,\n      height: 10\n    },\n    shadowColor: \"black\",\n    shadowOpacity: 1.0,\n    borderRadius: 15,\n    opacity: 1,\n    width: 329,\n    height: 58\n  },\n  buttonText: {\n    textAlign: \"center\",\n    top: 7,\n    fontSize: 24,\n    color: \"#fffffF\",\n    opacity: 1\n  },\n  maybeRenderImageText: {\n    paddingHorizontal: 10,\n    paddingVertical: 10\n  }\n});","map":{"version":3,"sources":["/home/nightwarrior-xxx/Documents/Minor/Minor2/EasyPay/EasyPay/screens/authentication/UploadScreen.js"],"names":["React","Component","Permissions","ImagePicker","Constants","Utils","UploadScreen","state","image","uploading","_maybeRenderUploadingOverlay","StyleSheet","absoluteFill","styles","maybeRenderUploading","_maybeRenderImage","maybeRenderContainer","maybeRenderImageContainer","uri","maybeRenderImage","_copyToClipboard","_share","maybeRenderImageText","_takePhoto","askAsync","CAMERA","cameraPerm","status","launchCameraAsync","allowsEditing","aspect","base64","quality","pickerResult","_handleImagePicked","setState","cancelled","console","log","uploadImageAsync","uploadResponse","json","uploadResult","location","props","navigation","navigate","e","alert","container","exampleText","buttonStyle","buttonText","apiUrl","UPLOAD_IMAGE","formData","FormData","append","options","method","body","headers","Accept","fetch","create","alignItems","flex","justifyContent","fontSize","marginBottom","marginHorizontal","textAlign","backgroundColor","borderRadius","elevation","marginTop","shadowColor","shadowOpacity","shadowOffset","height","width","shadowRadius","borderTopLeftRadius","borderTopRightRadius","overflow","opacity","top","color","paddingHorizontal","paddingVertical"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  ActivityIndicator,\n  Button,\n  Clipboard,\n  Image,\n  Share,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View\n} from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as Constants from \"../../constants\";\nimport * as Utils from \"../../utils\";\nexport default class UploadScreen extends Component {\n  state = {\n    image: null,\n    uploading: false\n  };\n\n  render() {\n    let { image } = this.state;\n\n    return (\n      <View style={styles.container}>\n        <StatusBar barStyle=\"default\" />\n\n        <Text style={styles.exampleText}>Upload Image</Text>\n\n        <TouchableOpacity onPress={this._takePhoto} style={styles.buttonStyle}>\n          <Text style={styles.buttonText}>Take Photo</Text>\n        </TouchableOpacity>\n\n        {this._maybeRenderImage()}\n        {this._maybeRenderUploadingOverlay()}\n      </View>\n    );\n  }\n\n  _maybeRenderUploadingOverlay = () => {\n    if (this.state.uploading) {\n      return (\n        <View style={[StyleSheet.absoluteFill, styles.maybeRenderUploading]}>\n          <ActivityIndicator color=\"#fff\" size=\"large\" />\n        </View>\n      );\n    }\n  };\n\n  _maybeRenderImage = () => {\n    let { image } = this.state;\n\n    if (!image) {\n      return;\n    }\n\n    return (\n      <View style={styles.maybeRenderContainer}>\n        <View style={styles.maybeRenderImageContainer}>\n          <Image source={{ uri: image }} style={styles.maybeRenderImage} />\n        </View>\n\n        <Text\n          onPress={this._copyToClipboard}\n          onLongPress={this._share}\n          style={styles.maybeRenderImageText}\n        >\n          {image}\n        </Text>\n      </View>\n    );\n  };\n\n  _takePhoto = async () => {\n    const { status: cameraPerm } = await Permissions.askAsync(\n      Permissions.CAMERA\n    );\n\n    // only if user allows permission to camera\n    if (cameraPerm === \"granted\") {\n      let pickerResult = await ImagePicker.launchCameraAsync({\n        allowsEditing: true,\n        aspect: [4, 3],\n        base64: true,\n        quality: 1\n      });\n\n      this._handleImagePicked(pickerResult);\n    }\n  };\n\n  _handleImagePicked = async pickerResult => {\n    let uploadResponse, uploadResult;\n\n    try {\n      this.setState({\n        uploading: true\n      });\n\n      if (!pickerResult.cancelled) {\n        console.log(pickerResult.base64);\n        uploadResponse = await uploadImageAsync(pickerResult.base64);\n        uploadResult = await uploadResponse.json();\n\n        this.setState({\n          image: uploadResult.location\n        });\n      }\n      console.log(uploadResult);\n      this.props.navigation.navigate(\"App\");\n    } catch (e) {\n      console.log({ uploadResponse });\n      console.log({ uploadResult });\n      console.log({ e });\n      alert(\"Upload failed, sorry :(\");\n    } finally {\n      this.setState({\n        uploading: false\n      });\n    }\n  };\n}\n\nasync function uploadImageAsync(uri) {\n  let apiUrl = Constants.UPLOAD_IMAGE;\n\n  let formData = new FormData();\n  formData.append(\"image\", uri);\n\n  let options = {\n    method: \"POST\",\n    body: formData,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  };\n\n  return fetch(apiUrl, options);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  exampleText: {\n    fontSize: 20,\n    marginBottom: 20,\n    marginHorizontal: 15,\n    textAlign: \"center\"\n  },\n  maybeRenderUploading: {\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n    justifyContent: \"center\"\n  },\n  maybeRenderContainer: {\n    borderRadius: 3,\n    elevation: 2,\n    marginTop: 30,\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOpacity: 0.2,\n    shadowOffset: {\n      height: 4,\n      width: 4\n    },\n    shadowRadius: 5,\n    width: 250\n  },\n  maybeRenderImageContainer: {\n    borderTopLeftRadius: 3,\n    borderTopRightRadius: 3,\n    overflow: \"hidden\"\n  },\n  maybeRenderImage: {\n    height: 250,\n    width: 250\n  },\n  buttonStyle: {\n    backgroundColor: \"#9C27B0\",\n    shadowOffset: { width: 10, height: 10 },\n    shadowColor: \"black\",\n    shadowOpacity: 1.0,\n    borderRadius: 15,\n    opacity: 1,\n    width: 329,\n    height: 58\n  },\n  buttonText: {\n    textAlign: \"center\",\n    top: 7,\n    fontSize: 24,\n    color: \"#fffffF\",\n    opacity: 1\n  },\n  maybeRenderImageText: {\n    paddingHorizontal: 10,\n    paddingVertical: 10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}