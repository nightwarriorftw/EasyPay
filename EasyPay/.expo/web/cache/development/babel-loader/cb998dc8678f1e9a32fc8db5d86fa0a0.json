{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar TOKEN_KEY = \"token_key\";\nvar USER_KEY = \"user_key\";\nexport var handleLogin = function handleLogin(data) {\n  return _regeneratorRuntime.async(function handleLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(setStorageData(data));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          throw new Error(_context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\nexport var setStorageData = function setStorageData(data) {\n  var token, user, data_;\n  return _regeneratorRuntime.async(function setStorageData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          token = data.token, user = data.user;\n          data_ = [[USER_KEY, JSON.stringify(user)], [TOKEN_KEY, token]];\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.multiSet(data_));\n\n        case 5:\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          throw new Error(_context2.t0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var getStorageData = function getStorageData() {\n  var token, user;\n  return _regeneratorRuntime.async(function getStorageData$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(TOKEN_KEY));\n\n        case 3:\n          token = _context3.sent;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(USER_KEY));\n\n        case 6:\n          user = _context3.sent;\n\n          if (!(token !== null && user !== null)) {\n            _context3.next = 11;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", {\n            token: token,\n            user: JSON.parse(user)\n          });\n\n        case 11:\n          return _context3.abrupt(\"return\", null);\n\n        case 12:\n          _context3.next = 17;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](0);\n          throw new Error(_context3.t0);\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 14]], Promise);\n};","map":{"version":3,"sources":["/home/nightwarrior-xxx/Documents/Minor/Minor2/EasyPay/EasyPay/utils.js"],"names":["TOKEN_KEY","USER_KEY","handleLogin","data","setStorageData","Error","token","user","data_","JSON","stringify","AsyncStorage","multiSet","getStorageData","getItem","parse"],"mappings":";;AAEA,IAAMA,SAAS,GAAG,WAAlB;AACA,IAAMC,QAAQ,GAAG,UAAjB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEjBC,cAAc,CAACD,IAAD,CAFG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,gBAIjB,IAAIE,KAAJ,aAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAQP,OAAO,IAAMD,cAAc,GAAG,SAAjBA,cAAiB,CAAMD,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpBG,UAAAA,KAFoB,GAEJH,IAFI,CAEpBG,KAFoB,EAEbC,IAFa,GAEJJ,IAFI,CAEbI,IAFa;AAGtBC,UAAAA,KAHsB,GAGd,CACV,CAACP,QAAD,EAAWQ,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX,CADU,EAEV,CAACP,SAAD,EAAYM,KAAZ,CAFU,CAHc;AAAA;AAAA,2CAOpBK,YAAY,CAACC,QAAb,CAAsBJ,KAAtB,CAPoB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,gBASpB,IAAIH,KAAJ,cAToB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAaP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAERF,YAAY,CAACG,OAAb,CAAqBd,SAArB,CAFQ;;AAAA;AAEtBM,UAAAA,KAFsB;AAAA;AAAA,2CAGTK,YAAY,CAACG,OAAb,CAAqBb,QAArB,CAHS;;AAAA;AAGtBM,UAAAA,IAHsB;;AAAA,gBAItBD,KAAK,KAAK,IAAV,IAAkBC,IAAI,KAAK,IAJL;AAAA;AAAA;AAAA;;AAAA,4CAKjB;AAAED,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,IAAI,EAAEE,IAAI,CAACM,KAAL,CAAWR,IAAX;AAAf,WALiB;;AAAA;AAAA,4CAMd,IANc;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,gBAQpB,IAAIF,KAAJ,cARoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { AsyncStorage } from \"react-native\";\n\nconst TOKEN_KEY = \"token_key\";\nconst USER_KEY = \"user_key\";\n\nexport const handleLogin = async data => {\n  try {\n    await setStorageData(data);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const setStorageData = async data => {\n  try {\n    let { token, user } = data;\n    let data_ = [\n      [USER_KEY, JSON.stringify(user)],\n      [TOKEN_KEY, token]\n    ];\n    await AsyncStorage.multiSet(data_);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getStorageData = async () => {\n  try {\n    let token = await AsyncStorage.getItem(TOKEN_KEY);\n    let user = await AsyncStorage.getItem(USER_KEY);\n    if (token !== null && user !== null)\n      return { token, user: JSON.parse(user) };\n    else return null;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}