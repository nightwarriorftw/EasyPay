{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/nightwarrior-xxx/Documents/Minor/Minor2/EasyPay/EasyPay/node_modules/react-native-app-intro-slider/AppIntroSlider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport DefaultSlide from \"./DefaultSlide\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar isIphoneX = Platform.OS === 'ios' && !Platform.isPad && !Platform.isTVOS && (height === 812 || width === 812);\nvar isAndroidRTL = I18nManager.isRTL && Platform.OS === 'android';\n\nvar AppIntroSlider = function (_React$Component) {\n  _inherits(AppIntroSlider, _React$Component);\n\n  var _super = _createSuper(AppIntroSlider);\n\n  function AppIntroSlider() {\n    var _this;\n\n    _classCallCheck(this, AppIntroSlider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      width: width,\n      height: height,\n      activeIndex: 0\n    };\n\n    _this.goToSlide = function (pageNum) {\n      _this.setState({\n        activeIndex: pageNum\n      });\n\n      _this.flatList.scrollToOffset({\n        offset: _this._rtlSafeIndex(pageNum) * _this.state.width\n      });\n    };\n\n    _this.getListRef = function () {\n      return _this.flatList;\n    };\n\n    _this._onNextPress = function () {\n      _this.goToSlide(_this.state.activeIndex + 1);\n\n      _this.props.onSlideChange && _this.props.onSlideChange(_this.state.activeIndex + 1, _this.state.activeIndex);\n    };\n\n    _this._onPrevPress = function () {\n      _this.goToSlide(_this.state.activeIndex - 1);\n\n      _this.props.onSlideChange && _this.props.onSlideChange(_this.state.activeIndex - 1, _this.state.activeIndex);\n    };\n\n    _this._onPaginationPress = function (index) {\n      var activeIndexBeforeChange = _this.state.activeIndex;\n\n      _this.goToSlide(index);\n\n      _this.props.onSlideChange && _this.props.onSlideChange(index, activeIndexBeforeChange);\n    };\n\n    _this._renderItem = function (flatListArgs) {\n      var _this$state = _this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n\n      var props = _objectSpread({}, flatListArgs, {\n        dimensions: {\n          width: width,\n          height: height\n        }\n      });\n\n      return React.createElement(View, {\n        style: {\n          width: width,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, _this.props.renderItem ? _this.props.renderItem(props) : React.createElement(DefaultSlide, _extends({\n        bottomButton: _this.props.bottomButton\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    _this._renderButton = function (name, onPress) {\n      var show = _this.props[\"show\" + name + \"Button\"];\n      var content = _this.props[\"render\" + name + \"Button\"] ? _this.props[\"render\" + name + \"Button\"]() : _this._renderDefaultButton(name);\n      return show && _this._renderOuterButton(content, name, onPress);\n    };\n\n    _this._renderDefaultButton = function (name) {\n      var content = React.createElement(Text, {\n        style: [styles.buttonText, _this.props.buttonTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, _this.props[name.toLowerCase() + \"Label\"]);\n\n      if (_this.props.bottomButton) {\n        content = React.createElement(View, {\n          style: [styles.bottomButton, (name === 'Skip' || name === 'Prev') && {\n            backgroundColor: 'transparent'\n          }, _this.props.buttonStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }\n        }, content);\n      }\n\n      return content;\n    };\n\n    _this._renderOuterButton = function (content, name, onPress) {\n      var style = name === 'Skip' || name === 'Prev' ? styles.leftButtonContainer : styles.rightButtonContainer;\n      return React.createElement(View, {\n        style: !_this.props.bottomButton && style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: onPress,\n        style: _this.props.bottomButton ? styles.flexOne : _this.props.buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, content));\n    };\n\n    _this._renderNextButton = function () {\n      return _this._renderButton('Next', _this._onNextPress);\n    };\n\n    _this._renderPrevButton = function () {\n      return _this._renderButton('Prev', _this._onPrevPress);\n    };\n\n    _this._renderDoneButton = function () {\n      return _this._renderButton('Done', _this.props.onDone && _this.props.onDone);\n    };\n\n    _this._renderSkipButton = function () {\n      return _this._renderButton('Skip', function () {\n        return _this.props.onSkip ? _this.props.onSkip() : _this.goToSlide(_this.props.slides.length - 1);\n      });\n    };\n\n    _this._renderPagination = function () {\n      var isLastSlide = _this.state.activeIndex === _this.props.slides.length - 1;\n      var isFirstSlide = _this.state.activeIndex === 0;\n\n      var skipBtn = !isFirstSlide && _this._renderPrevButton() || !isLastSlide && _this._renderSkipButton();\n\n      var btn = isLastSlide ? _this._renderDoneButton() : _this._renderNextButton();\n      return React.createElement(View, {\n        style: [styles.paginationContainer, _this.props.paginationStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.paginationDots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, _this.props.slides.length > 1 && _this.props.slides.map(function (_, i) {\n        return React.createElement(TouchableOpacity, {\n          key: i,\n          style: [styles.dot, _this._rtlSafeIndex(i) === _this.state.activeIndex ? _this.props.activeDotStyle : _this.props.dotStyle],\n          onPress: function onPress() {\n            return _this._onPaginationPress(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }\n        });\n      })), btn, skipBtn);\n    };\n\n    _this._rtlSafeIndex = function (i) {\n      return isAndroidRTL ? _this.props.slides.length - 1 - i : i;\n    };\n\n    _this._onMomentumScrollEnd = function (e) {\n      var offset = e.nativeEvent.contentOffset.x;\n\n      var newIndex = _this._rtlSafeIndex(Math.round(offset / _this.state.width));\n\n      if (newIndex === _this.state.activeIndex) {\n        return;\n      }\n\n      var lastIndex = _this.state.activeIndex;\n\n      _this.setState({\n        activeIndex: newIndex\n      });\n\n      _this.props.onSlideChange && _this.props.onSlideChange(newIndex, lastIndex);\n    };\n\n    _this._onLayout = function () {\n      var _Dimensions$get2 = Dimensions.get('window'),\n          width = _Dimensions$get2.width,\n          height = _Dimensions$get2.height;\n\n      if (width !== _this.state.width || height !== _this.state.height) {\n        _this.setState({\n          width: width,\n          height: height\n        });\n\n        var func = function func() {\n          _this.flatList.scrollToOffset({\n            offset: _this._rtlSafeIndex(_this.state.activeIndex) * width,\n            animated: false\n          });\n        };\n\n        Platform.OS === 'android' ? setTimeout(func, 0) : func();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AppIntroSlider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          hidePagination = _this$props.hidePagination,\n          activeDotStyle = _this$props.activeDotStyle,\n          dotStyle = _this$props.dotStyle,\n          skipLabel = _this$props.skipLabel,\n          doneLabel = _this$props.doneLabel,\n          nextLabel = _this$props.nextLabel,\n          prevLabel = _this$props.prevLabel,\n          buttonStyle = _this$props.buttonStyle,\n          buttonTextStyle = _this$props.buttonTextStyle,\n          renderItem = _this$props.renderItem,\n          data = _this$props.data,\n          otherProps = _objectWithoutProperties(_this$props, [\"hidePagination\", \"activeDotStyle\", \"dotStyle\", \"skipLabel\", \"doneLabel\", \"nextLabel\", \"prevLabel\", \"buttonStyle\", \"buttonTextStyle\", \"renderItem\", \"data\"]);\n\n      return React.createElement(View, {\n        style: styles.flexOne,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, _extends({\n        ref: function ref(_ref) {\n          return _this2.flatList = _ref;\n        },\n        data: this.props.slides,\n        horizontal: true,\n        pagingEnabled: true,\n        showsHorizontalScrollIndicator: false,\n        bounces: false,\n        style: styles.flatList,\n        renderItem: this._renderItem,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        extraData: this.state.width,\n        onLayout: this._onLayout\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }\n      })), !hidePagination && this._renderPagination());\n    }\n  }]);\n\n  return AppIntroSlider;\n}(React.Component);\n\nAppIntroSlider.defaultProps = {\n  activeDotStyle: {\n    backgroundColor: 'rgba(255, 255, 255, .9)'\n  },\n  dotStyle: {\n    backgroundColor: 'rgba(0, 0, 0, .2)'\n  },\n  skipLabel: 'Skip',\n  doneLabel: 'Done',\n  nextLabel: 'Next',\n  prevLabel: 'Back',\n  buttonStyle: null,\n  buttonTextStyle: null,\n  paginationStyle: null,\n  showDoneButton: true,\n  showNextButton: true\n};\nexport { AppIntroSlider as default };\nvar styles = StyleSheet.create({\n  flexOne: {\n    flex: 1\n  },\n  flatList: {\n    flex: 1,\n    flexDirection: isAndroidRTL ? 'row-reverse' : 'row'\n  },\n  paginationContainer: {\n    position: 'absolute',\n    bottom: 16 + (isIphoneX ? 34 : 0),\n    left: 16,\n    right: 16\n  },\n  paginationDots: {\n    height: 16,\n    margin: 16,\n    flexDirection: isAndroidRTL ? 'row-reverse' : 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  dot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginHorizontal: 4\n  },\n  leftButtonContainer: {\n    position: 'absolute',\n    left: 0\n  },\n  rightButtonContainer: {\n    position: 'absolute',\n    right: 0\n  },\n  bottomButton: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, .3)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 18,\n    padding: 12\n  }\n});","map":{"version":3,"sources":["/home/nightwarrior-xxx/Documents/Minor/Minor2/EasyPay/EasyPay/node_modules/react-native-app-intro-slider/AppIntroSlider.js"],"names":["React","DefaultSlide","Dimensions","get","width","height","isIphoneX","Platform","OS","isPad","isTVOS","isAndroidRTL","I18nManager","isRTL","AppIntroSlider","state","activeIndex","goToSlide","pageNum","setState","flatList","scrollToOffset","offset","_rtlSafeIndex","getListRef","_onNextPress","props","onSlideChange","_onPrevPress","_onPaginationPress","index","activeIndexBeforeChange","_renderItem","flatListArgs","dimensions","flex","renderItem","bottomButton","_renderButton","name","onPress","show","content","_renderDefaultButton","_renderOuterButton","styles","buttonText","buttonTextStyle","toLowerCase","backgroundColor","buttonStyle","style","leftButtonContainer","rightButtonContainer","flexOne","_renderNextButton","_renderPrevButton","_renderDoneButton","onDone","_renderSkipButton","onSkip","slides","length","_renderPagination","isLastSlide","isFirstSlide","skipBtn","btn","paginationContainer","paginationStyle","paginationDots","map","_","i","dot","activeDotStyle","dotStyle","_onMomentumScrollEnd","e","nativeEvent","contentOffset","x","newIndex","Math","round","lastIndex","_onLayout","func","animated","setTimeout","hidePagination","skipLabel","doneLabel","nextLabel","prevLabel","data","otherProps","ref","Component","defaultProps","showDoneButton","showNextButton","StyleSheet","create","flexDirection","position","bottom","left","right","margin","justifyContent","alignItems","borderRadius","marginHorizontal","color","fontSize","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  FlatList,\n  View,\n  Dimensions,\n  Text,\n  TouchableOpacity,\n  Platform,\n  StatusBar,\n  I18nManager,\n} from 'react-native';\nimport DefaultSlide from './DefaultSlide';\n\nconst { width, height } = Dimensions.get('window');\n\nconst isIphoneX =\n  Platform.OS === 'ios' && !Platform.isPad && !Platform.isTVOS && (height === 812 || width === 812);\n\nconst isAndroidRTL = I18nManager.isRTL && Platform.OS === 'android';\n\nexport default class AppIntroSlider extends React.Component {\n  static defaultProps = {\n    activeDotStyle: {\n      backgroundColor: 'rgba(255, 255, 255, .9)',\n    },\n    dotStyle: {\n      backgroundColor: 'rgba(0, 0, 0, .2)',\n    },\n    skipLabel: 'Skip',\n    doneLabel: 'Done',\n    nextLabel: 'Next',\n    prevLabel: 'Back',\n    buttonStyle: null,\n    buttonTextStyle: null,\n    paginationStyle: null,\n    showDoneButton: true,\n    showNextButton: true,\n  };\n  state = {\n    width,\n    height,\n    activeIndex: 0,\n  };\n\n  goToSlide = pageNum => {\n    this.setState({ activeIndex: pageNum });\n    this.flatList.scrollToOffset({\n      offset: this._rtlSafeIndex(pageNum) * this.state.width,\n    });\n  };\n\n  // Get the list ref\n  getListRef = () => this.flatList;\n\n  _onNextPress = () => {\n    this.goToSlide(this.state.activeIndex + 1);\n    this.props.onSlideChange &&\n      this.props.onSlideChange(this.state.activeIndex + 1, this.state.activeIndex);\n  };\n  _onPrevPress = () => {\n    this.goToSlide(this.state.activeIndex - 1);\n    this.props.onSlideChange &&\n      this.props.onSlideChange(this.state.activeIndex - 1, this.state.activeIndex);\n  };\n\n  _onPaginationPress = index => {\n    const activeIndexBeforeChange = this.state.activeIndex;\n    this.goToSlide(index);\n    this.props.onSlideChange && this.props.onSlideChange(index, activeIndexBeforeChange);\n  };\n\n  _renderItem = flatListArgs => {\n    const { width, height } = this.state;\n    const props = { ...flatListArgs, dimensions: { width, height } };\n    return (\n      <View style={{ width, flex: 1 }}>\n        {this.props.renderItem ? (\n          this.props.renderItem(props)\n        ) : (\n          <DefaultSlide bottomButton={this.props.bottomButton} {...props} />\n        )}\n      </View>\n    );\n  };\n\n  _renderButton = (name, onPress) => {\n    const show = this.props[`show${name}Button`];\n    const content = this.props[`render${name}Button`]\n      ? this.props[`render${name}Button`]()\n      : this._renderDefaultButton(name);\n    return show && this._renderOuterButton(content, name, onPress);\n  };\n\n  _renderDefaultButton = name => {\n    let content = (\n      <Text style={[styles.buttonText, this.props.buttonTextStyle]}>\n        {this.props[`${name.toLowerCase()}Label`]}\n      </Text>\n    );\n    if (this.props.bottomButton) {\n      content = (\n        <View\n          style={[\n            styles.bottomButton,\n            (name === 'Skip' || name === 'Prev') && {\n              backgroundColor: 'transparent',\n            },\n            this.props.buttonStyle,\n          ]}\n        >\n          {content}\n        </View>\n      );\n    }\n    return content;\n  };\n\n  _renderOuterButton = (content, name, onPress) => {\n    const style =\n      name === 'Skip' || name === 'Prev' ? styles.leftButtonContainer : styles.rightButtonContainer;\n    return (\n      <View style={!this.props.bottomButton && style}>\n        <TouchableOpacity\n          onPress={onPress}\n          style={this.props.bottomButton ? styles.flexOne : this.props.buttonStyle}\n        >\n          {content}\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  _renderNextButton = () => this._renderButton('Next', this._onNextPress);\n\n  _renderPrevButton = () => this._renderButton('Prev', this._onPrevPress);\n\n  _renderDoneButton = () => this._renderButton('Done', this.props.onDone && this.props.onDone);\n\n  _renderSkipButton = () =>\n    // scrollToEnd does not work in RTL so use goToSlide instead\n    this._renderButton('Skip', () =>\n      this.props.onSkip ? this.props.onSkip() : this.goToSlide(this.props.slides.length - 1)\n    );\n\n  _renderPagination = () => {\n    const isLastSlide = this.state.activeIndex === this.props.slides.length - 1;\n    const isFirstSlide = this.state.activeIndex === 0;\n\n    const skipBtn =\n      (!isFirstSlide && this._renderPrevButton()) || (!isLastSlide && this._renderSkipButton());\n    const btn = isLastSlide ? this._renderDoneButton() : this._renderNextButton();\n\n    return (\n      <View style={[styles.paginationContainer, this.props.paginationStyle]}>\n        <View style={styles.paginationDots}>\n          {this.props.slides.length > 1 &&\n            this.props.slides.map((_, i) => (\n              <TouchableOpacity\n                key={i}\n                style={[\n                  styles.dot,\n                  this._rtlSafeIndex(i) === this.state.activeIndex\n                    ? this.props.activeDotStyle\n                    : this.props.dotStyle,\n                ]}\n                onPress={() => this._onPaginationPress(i)}\n              />\n            ))}\n        </View>\n        {btn}\n        {skipBtn}\n      </View>\n    );\n  };\n\n  _rtlSafeIndex = i => (isAndroidRTL ? this.props.slides.length - 1 - i : i);\n\n  _onMomentumScrollEnd = e => {\n    const offset = e.nativeEvent.contentOffset.x;\n    // Touching very very quickly and continuous brings about\n    // a variation close to - but not quite - the width.\n    // That's why we round the number.\n    // Also, Android phones and their weird numbers\n    const newIndex = this._rtlSafeIndex(Math.round(offset / this.state.width));\n    if (newIndex === this.state.activeIndex) {\n      // No page change, don't do anything\n      return;\n    }\n    const lastIndex = this.state.activeIndex;\n    this.setState({ activeIndex: newIndex });\n    this.props.onSlideChange && this.props.onSlideChange(newIndex, lastIndex);\n  };\n\n  _onLayout = () => {\n    const { width, height } = Dimensions.get('window');\n    if (width !== this.state.width || height !== this.state.height) {\n      // Set new width to update rendering of pages\n      this.setState({ width, height });\n      // Set new scroll position\n      const func = () => {\n        this.flatList.scrollToOffset({\n          offset: this._rtlSafeIndex(this.state.activeIndex) * width,\n          animated: false,\n        });\n      };\n      Platform.OS === 'android' ? setTimeout(func, 0) : func();\n    }\n  };\n\n  render() {\n    // Separate props used by the component to props passed to FlatList\n    const {\n      hidePagination,\n      activeDotStyle,\n      dotStyle,\n      skipLabel,\n      doneLabel,\n      nextLabel,\n      prevLabel,\n      buttonStyle,\n      buttonTextStyle,\n      renderItem,\n      data,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <View style={styles.flexOne}>\n        <FlatList\n          ref={ref => (this.flatList = ref)}\n          data={this.props.slides}\n          horizontal\n          pagingEnabled\n          showsHorizontalScrollIndicator={false}\n          bounces={false}\n          style={styles.flatList}\n          renderItem={this._renderItem}\n          onMomentumScrollEnd={this._onMomentumScrollEnd}\n          extraData={this.state.width}\n          onLayout={this._onLayout}\n          {...otherProps}\n        />\n        {!hidePagination && this._renderPagination()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  flexOne: {\n    flex: 1,\n  },\n  flatList: {\n    flex: 1,\n    flexDirection: isAndroidRTL ? 'row-reverse' : 'row',\n  },\n  paginationContainer: {\n    position: 'absolute',\n    bottom: 16 + (isIphoneX ? 34 : 0),\n    left: 16,\n    right: 16,\n  },\n  paginationDots: {\n    height: 16,\n    margin: 16,\n    flexDirection: isAndroidRTL ? 'row-reverse' : 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginHorizontal: 4,\n  },\n  leftButtonContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  rightButtonContainer: {\n    position: 'absolute',\n    right: 0,\n  },\n  bottomButton: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, .3)',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 18,\n    padding: 12,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}